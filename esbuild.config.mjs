import esbuild from 'esbuild';
import process from 'process';
import builtins from 'builtin-modules';
import { join } from 'path';
import { copyFileSync } from 'fs';

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = process.argv[2] === 'production';
const vaultPath = process.argv[3];

function devCopy(error) {
  if (vaultPath && !error) {
    try {
      const copyPath = join(vaultPath, '.obsidian/plugins/feta');
      process.stdout.write(`Copying to ${copyPath}...`);
      copyFileSync('main.js', join(vaultPath, '.obsidian/plugins/feta/main.js'));
      copyFileSync('manifest.json', join(vaultPath, '.obsidian/plugins/feta/manifest.json'));
      copyFileSync('styles.css', join(vaultPath, '.obsidian/plugins/feta/styles.css'));
      process.stdout.write('Done.\n');
    } catch {
      process.stdout.write('\n****COULD NOT COPY FILES****\n');
    }
  }
}

esbuild
  .build({
    banner: {
      js: banner
    },
    entryPoints: ['src/main.ts'],
    bundle: true,
    external: ['obsidian', 'electron', ...builtins],
    format: 'cjs',
    outdir: '.',
    outbase: 'src',
    watch: !prod ? { onRebuild: devCopy } : false,
    target: 'es2016',
    logLevel: 'info',
    sourcemap: prod ? false : 'inline',
    treeShaking: true
  })
  .then(() => {
    if (!prod) {
      devCopy(false);
    }
  })
  .catch(() => process.exit(1));
